swagger: "2.0"
info:
    title: "Platform Admin API"
    description: "Docs for Platform Admin API"
    version: "1.0.0"
schemes:
    - "http"
host: dev.prodact.me
basePath: /api

produces:
    - "application/json"
consumes:
    - "application/json"

paths:
    /login:
        post:
            tags:
                - "login"
            summary: "Login user"
            parameters:
                -   name: "LoginRequestBody"
                    in: "body"
                    description: "Body of request for login user"
                    required: true
                    schema:
                        $ref: "#/definitions/LoginRequestModel"
            responses:
                200:
                    description: "Successful operation or custom errors"
                    schema:
                        $ref: "#/definitions/LoginResponseModel"

    /register:
        post:
            tags:
                - "register"
            summary: "Register new user"
            parameters:
                -   name: "RegisterRequestBody"
                    in: "body"
                    description: "Body of request for register new user"
                    required: true
                    schema:
                        $ref: "#/definitions/RegisterRequestModel"
            responses:
                200:
                    description: "Successful operation or custom errors"
                    schema:
                        $ref: "#/definitions/RegisterResponseModel"

    /recover-password:
        post:
            tags:
                - "recover password"
            summary: "Recover password"
            parameters:
                -   name: "RecoverPasswordRequestBody"
                    in: "body"
                    description: "Body of request for recover password of user"
                    required: true
                    schema:
                        $ref: "#/definitions/RecoverPasswordRequestModel"

    /reset-password:
        post:
            tags:
                - "reset password"
            summary: "Recover password"
            parameters:
                -   name: "ResetPasswordRequestBody"
                    in: "body"
                    description: "Body of request for reset password of user"
                    required: true
                    schema:
                        $ref: "#/definitions/ResetPasswordRequestModel"

    /admin/blocks-export:
        get:
            tags:
                - "blocks"
                - "export"
            summary: "Export blocks"
            parameters:
                -   in: "query"
                    name: "block_ids"
                    type: "string"
                    description: "Block ids, separated by commas"

    /admin/blocks-export-download:
        get:
            tags:
                - "blocks"
                - "export"
            summary: "Download exported file with blocks"

    /admin/blocks-import:
        put:
            tags:
                - "blocks"
                - "import"
            summary: "Import blocks from file"
            parameters:
                -   name: "AdminImportBlocksRequestBody"
                    in: "body"
                    description: "Body of request for importing of blocks"
                    required: true
                    schema:
                        $ref: "#/definitions/AdminImportBlocksRequestModel"

    /admin/blocks:
        post:
            tags:
                - "blocks"
            summary: "Create block"
            parameters:
                -   name: "AdminCreateBlockRequestBody"
                    in: "body"
                    description: "Body of request for creating of block"
                    required: true
                    schema:
                        $ref: "#/definitions/AdminCreateBlockRequestModel"


    /admin/blocks/{block}:
        get:
            tags:
                - "blocks"
            summary: "Get block info"
            parameters:
                -   in: "path"
                    name: "block"
                    type: "integer"
                    required: true
                    description: "Id of block"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/BlockDetailResponseModel"
        put:
            tags:
                - "blocks"
            summary: "Update block"
            parameters:
                -   in: "path"
                    name: "block"
                    type: "integer"
                    required: true
                    description: "Id of block"
                -   name: "AdminUpdateBlockRequestBody"
                    in: "body"
                    description: "Body of request for updating of block"
                    required: true
                    schema:
                        $ref: "#/definitions/AdminUpdateBlockRequestModel"

    /admin/blocks/{block}/template:
        put:
            tags:
                - "blocks"
                - "block templates"
            summary: "Update block template"
            parameters:
                -   in: "path"
                    name: "block"
                    type: "integer"
                    required: true
                    description: "Id of block"
                -   name: "AdminUpdateBlockTemplateRequestBody"
                    in: "body"
                    description: "Body of request for updating of block template"
                    required: true
                    schema:
                        $ref: "#/definitions/AdminUpdateBlockTemplateRequestModel"

    /user:
        delete:
            tags:
                - "user"
            summary: "Delete current user account"

    /crm-sheets:
        get:
            tags:
                - "crm sheets"
            summary: "Get CRM Sheets"
            parameters:
                -   in: "query"
                    name: "limit"
                    type: "integer"
                    description: "Limit of items in response"
                -   in: "query"
                    name: "offset"
                    type: "integer"
                    description: "Offset of items in response"
                -   in: "query"
                    name: "sort_by"
                    type: "string"
                    description: "Sort by column"
                -   in: "query"
                    name: "sort_direction"
                    type: "string"
                    description: "Sort direction"
                    enum:
                        - "asc"
                        - "desc"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/CrmSheetsListResponseModel"
        post:
            tags:
                - "crm sheets"
            summary: "Create new CRM Sheet"
            parameters:
                -   name: "CreateCrmSheetRequestBody"
                    in: "body"
                    description: "Body of request for creation of CRM Sheet"
                    required: true
                    schema:
                        $ref: "#/definitions/CreateOnlyNameRequestModel"

    /crm-sheets/{crm_sheet}/sort:
        patch:
            tags:
                - "crm sheets"
            summary: "Set sort of CRM Sheet"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   name: "UpdateCrmSheetSortRequestBody"
                    in: "body"
                    description: "Body of request for set sort of CRM Sheet"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateCrmSheetSortRequestModel"

    /crm-sheets/sort-multiple:
        patch:
            tags:
                - "crm sheets"
            summary: "Set sort of multiple CRM Sheets"
            parameters:
                -   name: "UpdateCrmSheetsSortMultipleRequestBody"
                    in: "body"
                    description: "Body of request for set sort of CRM Sheets"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateSortMultipleRequestModel"
    /crm-sheets/{crm_sheet}:
        put:
            tags:
                - "crm sheets"
            summary: "Update of CRM Sheet"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   name: "UpdateCrmSheetRequestBody"
                    in: "body"
                    description: "Body of request for update of CRM Sheet"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateCrmSheetRequestModel"
        delete:
            tags:
                - "crm sheets"
            summary: "Delete of CRM Sheet"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true

    /crm-sheets/{crm_sheet}/record-statuses:
        post:
            tags:
                - "crm sheets"
                - "record statuses"
            summary: "Create record status for CRM Sheet"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   name: "CreateCrmSheetRecordStatusRequestBody"
                    in: "body"
                    description: "Body of request for creation of CRM Sheet record status"
                    required: true
                    schema:
                        $ref: "#/definitions/CreateOnlyNameRequestModel"
        get:
            tags:
                - "crm sheets"
                - "record statuses"
            summary: "Get record statuses for CRM Sheet"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "query"
                    name: "limit"
                    type: "integer"
                    description: "Limit of items in response"
                -   in: "query"
                    name: "offset"
                    type: "integer"
                    description: "Offset of items in response"
                -   in: "query"
                    name: "sort_by"
                    type: "string"
                    description: "Sort by column"
                -   in: "query"
                    name: "sort_direction"
                    type: "string"
                    description: "Sort direction"
                    enum:
                        - "asc"
                        - "desc"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/CrmSheetRecordStatusesListResponseModel"

    /crm-sheets/{crm_sheet}/record-statuses/{record_status}/sort:
        patch:
            tags:
                - "crm sheets"
                - "record statuses"
            summary: "Set sort record statuses for CRM Sheet"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "record_status"
                    type: "integer"
                    required: true
                    description: "Id of CRM Sheet record status"
                -   name: "UpdateCrmSheetRecordStatusSortRequestBody"
                    in: "body"
                    description: "Body of request for set sort of CRM Sheet record status"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateCrmSheetRecordStatusSortRequestModel"
    /crm-sheets/{crm_sheet}/record-statuses/sort-multiple:
        patch:
            tags:
                - "crm sheets"
                - "record statuses"
            summary: "Set sort for multiple record statuses for CRM Sheet"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   name: "UpdateCrmSheetRecordStatusesSortMultipleRequestBody"
                    in: "body"
                    description: "Body of request for set sort of CRM Sheet record statuses"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateSortMultipleRequestModel"

    /crm-sheets/{crm_sheet}/record-statuses/{record_status}:
        delete:
            tags:
                - "crm sheets"
                - "record statuses"
            summary: "Delete record status for CRM Sheet"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "record_status"
                    type: "integer"
                    required: true
                    description: "Id of CRM Sheet record status"
    /crm-sheets/{crm_sheet}/fields:
        post:
            tags:
                - "crm sheets"
                - "crm fields"
            summary: "Create field of CRM Sheet"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   name: "CreateCrmFieldRequestBody"
                    in: "body"
                    description: "Body of request for creation of CRM Sheet field"
                    required: true
                    schema:
                        $ref: "#/definitions/CreateCrmFieldRequestModel"
        get:
            tags:
                - "crm sheets"
                - "crm fields"
            summary: "Get fields of CRM Sheet"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "query"
                    name: "limit"
                    type: "integer"
                    description: "Limit of items in response"
                -   in: "query"
                    name: "offset"
                    type: "integer"
                    description: "Offset of items in response"
                -   in: "query"
                    name: "sort_by"
                    type: "string"
                    description: "Sort by column"
                -   in: "query"
                    name: "sort_direction"
                    type: "string"
                    description: "Sort direction"
                    enum:
                        - "asc"
                        - "desc"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/CrmFieldsListResponseModel"
    /crm-sheets/{crm_sheet}/fields/{field}/sort:
        patch:
            tags:
                - "crm sheets"
                - "crm fields"
            summary: "Set sort of CRM Sheet field"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "field"
                    type: "integer"
                    required: true
                    description: "Id of CRM Field"
                -   name: "UpdateCrmSheetFieldSortRequestBody"
                    in: "body"
                    description: "Body of request for set sort of CRM Sheet Field"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateCrmSheetFieldSortRequestModel"
    /crm-sheets/{crm_sheet}/fields/sort-multiple:
        patch:
            tags:
                - "crm sheets"
                - "crm fields"
            summary: "Set sort of CRM Sheet fields multiple"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   name: "UpdateCrmSheetFieldSortMultipleRequestBody"
                    in: "body"
                    description: "Body of request for set sort of CRM Sheet Fields multiple"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateSortMultipleRequestModel"
    /crm-sheets/{crm_sheet}/fields/{field}:
        delete:
            tags:
                - "crm sheets"
                - "crm fields"
            summary: "Set sort of CRM Sheet field"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "field"
                    type: "integer"
                    required: true
                    description: "Id of CRM Field"
    /crm-sheets/{crm_sheet}/fields/{field}/is-visible:
        patch:
            tags:
                - "crm sheets"
                - "crm sheet settings"
                - "crm fields"
            summary: "Set is_visible of CRM Sheet field"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "field"
                    type: "integer"
                    required: true
                    description: "Id of CRM Field"
                -   name: "UpdateCrmSheetFieldIsVisibleRequestBody"
                    in: "body"
                    description: "Body of request for set is_visible of CRM Sheet Field"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateCrmSheetFieldIsVisibleRequestModel"

    /crm-sheets/{crm_sheet}/records:
        get:
            tags:
                - "crm sheets"
                - "crm sheet records"
            summary: "Get CRM Sheet records"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "query"
                    name: "limit"
                    type: "integer"
                    description: "Limit of items in response"
                -   in: "query"
                    name: "offset"
                    type: "integer"
                    description: "Offset of items in response"
                -   in: "query"
                    name: "status_id"
                    type: "integer"
                    description: "Filter by status id"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/CrmSheetRecordsListResponseModel"

    /crm-sheets/{crm_sheet}/records/export/csv:
        get:
            tags:
                - "crm sheets"
                - "crm sheet records"
            summary: "export CRM Sheet records to csv file"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "query"
                    name: "limit"
                    type: "integer"
                    description: "Limit of items in response"
                -   in: "query"
                    name: "offset"
                    type: "integer"
                    description: "Offset of items in response"
                -   in: "query"
                    name: "status_id"
                    type: "integer"
                    description: "Filter by status id"
            responses:
                200:
                    description: "CSV File downloading"

    /crm-sheets/{crm_sheet}/records/export/xls:
        get:
            tags:
                - "crm sheets"
                - "crm sheet records"
            summary: "export CRM Sheet records to xlsx file"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "query"
                    name: "limit"
                    type: "integer"
                    description: "Limit of items in response"
                -   in: "query"
                    name: "offset"
                    type: "integer"
                    description: "Offset of items in response"
                -   in: "query"
                    name: "status_id"
                    type: "integer"
                    description: "Filter by status id"
            responses:
                200:
                    description: "XLSX File downloading"

    /crm-sheets/{crm_sheet}/records/create:
        post:
            tags:
                - "crm sheets"
                - "crm sheet records"
            summary: "Create CRM Sheet record"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   name: "CreateCrmSheetRecordRequestBody"
                    in: "body"
                    description: "You can see full description by address /dev-tools/crm-sheet-record-description"
                    required: true
                    schema:
                        $ref: "#/definitions/CreateCrmSheetRecordRequestModel"

    /crm-sheets/{crm_sheet}/records/{record}:
        put:
            tags:
                - "crm sheets"
                - "crm sheet records"
            summary: "Update CRM Sheet record"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "record"
                    type: "integer"
                    required: true
                    description: "Id of CRM Sheet record"
                -   name: "UpdateCrmSheetRecordRequestBody"
                    in: "body"
                    description: "You can see full description by address /dev-tools/crm-sheet-record-description"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateCrmSheetRecordRequestModel"
        delete:
            tags:
                - "crm sheets"
                - "crm sheet records"
            summary: "Delete CRM Sheet record"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "record"
                    type: "integer"
                    required: true
                    description: "Id of CRM Sheet record"

    /crm-sheets/{crm_sheet}/settings:
        get:
            tags:
                - "crm sheets"
                - "crm sheet settings"
            summary: "Get CRM Sheet settings"
            parameters:
                -   in: "path"
                    name: "crm_sheet"
                    type: "integer"
                    required: true
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/CrmSheetSettingsResponseModel"
    /handbooks/all:
        get:
            tags:
                - "handbooks"
            summary: "Get all handbooks"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/HandbooksResponseModel"

    /site/{site}/page/{page}/save:
        post:
            tags:
                - "sites"
                - "pages"
            summary: "Update site page"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "page"
                    type: "integer"
                    required: true
                    description: "Id of page"
                -   name: "UpdateSitePageBlocksRequestBody"
                    in: "body"
                    description: "Update site page blocks. Full description on page /dev-tools/update-blocks-description"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateSitePageBlocksRequestModel"

    /whois:
        get:
            tags:
                - "domains"
            summary: "check domain availability"
            parameters:
                -   in: "get"
                    name: "domain"
                    type: "string"
                    required: true
                    description: "domain name. example: domainname.ru"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/WhoisResponseModel"

    /domains/client/create:
        post:
            tags:
                - "domains"
            summary: "create questionForm for Domain registration"
            parameters:
                -   name: "CreateClientRequestModel"
                    in: "body"
                    description: "fields should be validated before sending data to Mastername."
                    required: true
                    schema:
                        $ref: "#/definitions/CreateClientRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/CreateClientResponseModel"

    site/{site}/domains/client/create/en:
        post:
            tags:
                - "domains"
            summary: "create questionForm for namesilo Domain registration"
            parameters:
                -   name: "CreateClientRequestModel"
                    in: "body"
                    description: "fields should be validated before sending data to Namesilo."
                    required: true
                    schema:
                        $ref: "#/definitions/CreateClientEnRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/CreateClientEnResponseModel"

    site/{site}/domains/create/en:
        get:
            tags:
                - "domains"
            summary: "create request for namesilo Domain registration"
            parameters:
                -   name: "Domain"
                    in: "post"
                    description: "Domain name"
                    required: true

    site/{site}/domains/renew/en:
        get:
            tags:
                - "domains"
            summary: "create questionForm for namesilo Domain renewing"
            parameters:
                -   name: "Domain"
                    in: "post"
                    description: "Domain name"
                    required: true

    site/{site}/domains/check/en:
        get:
            tags:
                - "domains"
            summary: "checking domain price and availability in namesilo"
            parameters:
                -   name: "Domain"
                    in: "post"
                    description: "Domain name"
                    required: true
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/DomainCheckEnResponseModel"

    /site/{site}/page/{page}/replicate:
        get:
            tags:
                - "pages"
            summary: "replicate site page"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/PageResponseModel"

    /site/{site}/history:
        get:
            tags:
                - "history"
            summary: "history of site changes"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/HistoryResponseModel"


    /site/{site}/page/{page}/image:
        post:
            tags:
                - "pages"
            summary: "site page upload image"
            parameters:
                -   name: "PageUploadImageRequestBody"
                    in: "body"
                    required: true
                    schema:
                        $ref: "#/definitions/PageUploadImageRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/PageResponseModel"

    /site/{site}/page/{page}/image/delete:
        get:
            tags:
                - "pages"
            summary: "site page delete image"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/PageResponseModel"

    /site/{site}/history/{history_action}/revert:
        get:
            tags:
                - "history"
            summary: "revert changes for site"

    /site/{site}/payment:
        get:
            tags:
                - "payment"
            summary: "pay tariff for site"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "PaymentRequestBody"
                    in: "body"
                    description: "Payment domain and/or tariff"
                    required: true
                    schema:
                        $ref: "#/definitions/PaymentRequestModel"
            responses:
                200:
                    description: "Successful operation: "
                    schema:
                        $ref: "#/definitions/PaymentResponseModel"

    /payment/status:
        get:
            tags:
                - "payment"
            parameters:
                -   in: "get"
                    name: "paymentId"
                    type: "string"
                    required: true
                -   in: "get"
                    name: "PayerID"
                    type: "string"
                    required: true
                -   in: "get"
                    name: "token"
                    type: "string"
                    required: true
            summary: "check payment status"
            responses:
                200:
                    description: "Successful operation: "
                    schema:
                        $ref: "#/definitions/PaymentStatusResponseModel"

    /payment/client_token:
        get:
            tags:
                - "payment"
            summary: "get Paypal bearer client token for advanced credit payments"
            responses:
                200:
                    description: "Successful operation: "
                    schema:
                        $ref: "#/definitions/PaymentClientTokenResponseModel"

    /external/site-page-blocks/{site_page_block}/crm-sheet-records:
        post:
            tags:
                - "sites"
                - "pages"
                - "crm sheet records"
            summary: "Create CRM Sheet record from form"
            parameters:
                -   in: "path"
                    name: "site_page_block"
                    type: "integer"
                    required: true
                    description: "Id of site page block"
                -   name: "CreateExternalCrmSheetRecordRequestBody"
                    in: "body"
                    description: "Create CRM Sheet record from site form. You can see full description by address /dev-tools/crm-sheet-record-description"
                    required: true
                    schema:
                        $ref: "#/definitions/CreateExternalCrmSheetRecordRequestModel"

    /sites/{site}:
        delete:
            tags:
                - "sites"
            summary: "Delete a site"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true

    /sites/{site}/portfolio/albums:
        get:
            tags:
                - "sites"
                - "portfolios"
                - "portfolio albums"
            summary: "Get portfolio albums"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "query"
                    name: "limit"
                    type: "integer"
                    description: "Limit of items in response"
                -   in: "query"
                    name: "offset"
                    type: "integer"
                    description: "Offset of items in response"
                -   in: "query"
                    name: "sort_by"
                    type: "string"
                    description: "Sort by column"
                -   in: "query"
                    name: "sort_direction"
                    type: "string"
                    description: "Sort direction"
                    enum:
                        - "asc"
                        - "desc"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/PortfolioAlbumsListResponseModel"
        post:
            tags:
                - "sites"
                - "portfolios"
                - "portfolio albums"
            summary: "Create a portfolio album"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "CreatePortfolioAlbumRequestBody"
                    in: "body"
                    description: "Body of request for creation of portfolio album"
                    required: true
                    schema:
                        $ref: "#/definitions/CreatePortfolioAlbumRequestModel"

    /sites/{site}/portfolio/albums/{album}:
        get:
            tags:
                - "sites"
                - "portfolios"
                - "portfolio albums"
            summary: "Get a portfolio album info"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "album"
                    type: "integer"
                    required: true
                    description: "Id of album"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/PortfolioAlbumDetailResponseModel"
        put:
            tags:
                - "sites"
                - "portfolios"
                - "portfolio albums"
            summary: "Update a portfolio album"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "album"
                    type: "integer"
                    required: true
                    description: "Id of album"
                -   name: "UpdatePortfolioAlbumRequestBody"
                    in: "body"
                    description: "Body of request for updating of portfolio album"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdatePortfolioAlbumRequestModel"
        delete:
            tags:
                - "sites"
                - "portfolios"
                - "portfolio albums"
            summary: "Delete a portfolio album"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "album"
                    type: "integer"
                    required: true
                    description: "Id of album"

    /sites/{site}/portfolio/albums/{album}/items:
        post:
            tags:
                - "portfolios"
                - "portfolio albums"
                - "portfolio album items"
            summary: "Create a portfolio album item"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "album"
                    type: "integer"
                    required: true
                    description: "Id of album"
                -   name: "CreatePortfolioItemRequestBody"
                    in: "body"
                    description: "Body of request for creation of portfolio album item"
                    required: true
                    schema:
                        $ref: "#/definitions/CreatePortfolioItemRequestModel"

    /sites/{site}/portfolio-items/{item}:
        put:
            tags:
                - "portfolios"
                - "portfolio items"
            summary: "Update a portfolio item"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "album"
                    type: "integer"
                    required: true
                    description: "Id of portfolio item"
                -   name: "UpdatePortfolioItemRequestBody"
                    in: "body"
                    description: "Body of request for update of portfolio item"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdatePortfolioItemRequestModel"
        delete:
            tags:
                - "portfolios"
                - "portfolio items"
            summary: "Delete a portfolio item"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "album"
                    type: "integer"
                    required: true
                    description: "Id of portfolio item"

    /sites/{site}/portfolio/items:
        post:
            tags:
                - "portfolios"
                - "portfolio items"
            summary: "Create a portfolio item"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "CreatePortfolioItemRequestBody"
                    in: "body"
                    description: "Body of request for creation of portfolio item"
                    required: true
                    schema:
                        $ref: "#/definitions/CreatePortfolioItemRequestModel"

    /news/{site}:
        get:
            tags:
                - "news"
            summary: "list of news items"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true

    /news/{site}/create:
        get:
            tags:
                - "news"
            summary: "Create a news item"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "NewsItemRequestBody"
                    in: "body"
                    description: "Body of request for creation of portfolio item"
                    required: true
                    schema:
                        $ref: "#/definitions/NewsItemRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/NewsItemResponseModel"

    /news/{site}/update/{news_item}:
        post:
            tags:
                - "news"
            summary: "update a news item"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "news_item"
                    type: "integer"
                    required: true
                -   name: "NewsItemRequestBody"
                    in: "body"
                    description: "Body of request for creation of portfolio item"
                    required: true
                    schema:
                        $ref: "#/definitions/NewsItemRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/NewsItemResponseModel"

    /news/{site}/delete/{news_item}:
        get:
            tags:
                - "news"
            summary: "Create a portfolio item"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "news_item"
                    type: "integer"
                    required: true

    tags/{site}:
        get:
            tags:
                - "tags"
            summary: "tags list"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true

    tags/{site}/create:
        post:
            tags:
                - "tags"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "TagRequestBody"
                    in: "body"
                    required: true
                    schema:
                        $ref: "#/definitions/TagRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/TagResponseModel"

    tags/{site}/update/{tag}:
        post:
            tags:
                - "tags"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "tag"
                    type: "integer"
                    required: true
                -   name: "TagRequestBody"
                    in: "body"
                    required: true
                    schema:
                        $ref: "#/definitions/TagRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/TagResponseModel"

    tags/{site}/delete/{tag}:
        get:
            tags:
                - "tags"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "tag"
                    type: "integer"
                    required: true

    tags/{site}/attach/{tag}:
        post:
            tags:
                - "tags"
            summary: "attach tag to entity"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "tag"
                    type: "integer"
                    required: true
                -   name: "TagAttachRequestBody"
                    in: "body"
                    required: true
                    schema:
                        $ref: "#/definitions/TagAttachRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/TagResponseModel"

    tags/{site}/detach/{tag}:
        post:
            tags:
                - "tags"
            summary: "detach tag from entity"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "tag"
                    type: "integer"
                    required: true
                -   name: "TagDetachRequestBody"
                    in: "body"
                    required: true
                    schema:
                        $ref: "#/definitions/TagAttachRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/TagResponseModel"

    site/{site}/domains/search:
        get:
            tags:
                - "domains"
            summary: "search available domains"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "body"
                    name: "query"
                    type: "string"
                    required: true
                    description: "domain search query"
                    schema:
                        $ref: "#/definitions/DomainSearchRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/DomainSearchResponseModel"

    sites/{site}/portfolio:
        get:
            tags:
                - "portfolios"
            summary: "Get portfolio info"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "query"
                    name: "album_ids"
                    type: "string"
                    description: "Id of albums, separated by commas"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/PortfolioDetailResponseModel"
        put:
            tags:
                - "portfolios"
            summary: "Update the portfolio"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "UpdatePortfolioRequestBody"
                    in: "body"
                    description: "Body of request for updating of portfolio"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdatePortfolioRequestModel"

    /admin/block-modules:
        get:
            tags:
                - "blocks"
                - "block modules"
            summary: "Get block modules list"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/AdminBlockModulesListResponseModel"

    /admin/site-pages/{site_page}/to-page-template:
        post:
            tags:
                - "page templates"
            summary: "Create page template from site page"
            parameters:
                -   in: "path"
                    name: "site_page"
                    type: "integer"
                    required: true
                    description: "Id of site page"
                -   name: "AdminCreatePageTemplateFromSitePageRequestBody"
                    in: "body"
                    description: "Body of request for creating of page template from site page"
                    required: true
                    schema:
                        $ref: "#/definitions/AdminCreatePageTemplateFromSitePageRequestModel"

    /admin/page-templates:
        get:
            tags:
                - "page templates"
            summary: "Get page templates"
            parameters:
                -   in: "query"
                    name: "limit"
                    type: "integer"
                    description: "Limit of items in response"
                -   in: "query"
                    name: "offset"
                    type: "integer"
                    description: "Offset of items in response"
                -   in: "query"
                    name: "sort_by"
                    type: "string"
                    description: "Sort by column"
                -   in: "query"
                    name: "sort_direction"
                    type: "string"
                    description: "Sort direction"
                    enum:
                        - "asc"
                        - "desc"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/AdminPageTemplatesListResponseModel"

    /admin/page-templates/{page_template}:
        put:
            tags:
                - "page templates"
            summary: "Update page template"
            parameters:
                -   in: "path"
                    name: "page_template"
                    type: "integer"
                    required: true
                    description: "Id of page template"
                -   name: "UpdatePageTemplateRequestBody"
                    in: "body"
                    description: "Body of request for updating of page template"
                    required: true
                    schema:
                        $ref: "#/definitions/AdminUpdatePageTemplateRequestModel"
        delete:
            tags:
                - "page templates"
            summary: "Delete page template"
            parameters:
                -   in: "path"
                    name: "page_template"
                    type: "integer"
                    required: true
                    description: "Id of page template"

    site/templates:
        get:
            tags:
                - "site templates"
            summary: "Get site templates"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/SiteTemplatesListResponseModel"

    sites/list:
        get:
            tags:
                - "sites"
            summary: "Get sites list"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/SitesListResponseModel"

    /catalog/{site}/product/create:
        put:
            tags:
                - "catalog"
            summary: "create catalog product"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "post"
                    name: "name"
                    type: "string"
                    required: true
                -   in: "post"
                    name: "slug"
                    type: "string"
                    required: true
                -   in: "post"
                    name: "description"
                    type: "string"
                    required: true
                -   in: "post"
                    name: "images"
                    type: "array"
                    required: true
                -   in: "post"
                    name: "code"
                    type: "string"
                -   in: "post"
                    name: "meta_title"
                    type: "string"
                -   in: "post"
                    name: "meta_keywords"
                    type: "string"
                -   in: "post"
                    name: "meta_description"
                    type: "string"
                -   in: "post"
                    name: "noindex"
                    type: "boolean"
                -   in: "post"
                    name: "exclude_from_sitemap"
                    type: "boolean"

    /catalog/{site}/products/{product}/attributes/{attribute}:
        put:
            tags:
                - "catalog product attributes"
            summary: "Update catalog product attribute"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "product"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "attribute"
                    type: "integer"
                    required: true
                    description: "Id of catalog product attribute"
                -   name: "UpdateCatalogProductAttributeRequestBody"
                    in: "body"
                    description: "Body of request for updating of catalog product attribute"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateCatalogProductAttributeRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/CatalogProductAttributesListResponseModel"

    site/{site}/settings/seo/save:
        post:
            tags:
                - "site settings"
            summary: "Update site settings"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "UpdateSiteSeoSettingsRequestBody"
                    in: "body"
                    description: "Body of request for updating of site SEO settings"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateSiteSeoSettingsRequestModel"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/SiteSeoSettingsResponseModel"

    /sites/{site}/pages/{page}/blocks/{block}/render:
        get:
            tags:
                - "site page block"
            summary: "Render site page block"
            produces:
                - "text/html"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "page"
                    type: "integer"
                    required: true
                    description: "Id of site page"
                -   in: "path"
                    name: "block"
                    type: "integer"
                    required: true
                    description: "Id of site page block"

    /sites/{site}/pages/{page}/system-blocks/{block}/render:
        get:
            tags:
                - "system block"
            summary: "Render system block"
            produces:
                - "text/html"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "path"
                    name: "page"
                    type: "integer"
                    required: true
                    description: "Id of site page"
                -   in: "path"
                    name: "block"
                    type: "integer"
                    required: true
                    description: "Id of system block"

    site/create:
        post:
            tags:
                - "site"
            summary: "Create site"
            parameters:
                -   name: "CreateSiteRequestBody"
                    in: "body"
                    description: "Body of request for creating of site"
                    required: true
                    schema:
                        $ref: "#/definitions/CreateSiteRequestModel"

    site/{site}/replicate:
        get:
            tags:
                - "site"
            summary: "Replicate site"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   in: "get"
                    name: "name"
                    type: "string"
                    required: false
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/SiteResponseModel"

    site/{site}/transfer:
        get:
            tags:
                - "site"
            summary: "transfer site"

            parameters:
                -   name: "email"
                    in: "get"
                    description: "email address"
                    required: true
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/TransferResponseModel"

    site/{site}/settings/save:
        post:
            tags:
                - "site"
            summary: "Update site settings"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "UpdateSiteRequestBody"
                    in: "body"
                    description: "Body of request for updating of site"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateSiteRequestModel"

    site/{site}/settings/domain/save:
        post:
            tags:
                - "site"
            summary: "Update site domain settings"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "UpdateSiteDomainRequestBody"
                    in: "body"
                    description: "Body of request for updating of site domain"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateSiteDomainRequestModel"

    site/{site}/settings/form/save:
        post:
            tags:
                - "site"
            summary: "Update site form settings"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "UpdateSiteFormRequestBody"
                    in: "body"
                    description: "Body of request for updating of site form"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateSiteFormRequestModel"

    site/{site}/settings/analytics/save:
        post:
            tags:
                - "site"
            summary: "Update site analytics settings"
            parameters:
                -   in: "path"
                    name: "site"
                    type: "integer"
                    required: true
                -   name: "UpdateSiteAnalyticsRequestBody"
                    in: "body"
                    description: "Body of request for updating of site analytics"
                    required: true
                    schema:
                        $ref: "#/definitions/UpdateSiteAnalyticsRequestModel"

    file/{file}:
        post:
            tags:
                - "files"
            summary: "Update site analytics settings"
            parameters:
                -   in: "path"
                    name: "file"
                    type: "integer"
                    required: true
            responses:
                200:
                    description: "File downloading"

    defalt responses:
        post:
            tags:
                - "default responses"
            responses:
                200:
                    description: "Successful operation"
                401:
                   description: "Unauthorized"
                403:
                   description: "Forbidden"
                404:
                   description: "Not found"
                422:
                   description: "Validation error"
                500:
                   description: "Internal server error"
